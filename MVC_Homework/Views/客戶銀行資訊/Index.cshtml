@using MVC_Homework.Models.ViewModels
@using MVC_Homework.Utils
@using X.PagedList
@using X.PagedList.Mvc
@using X.PagedList.Mvc.Common
@model IEnumerable<MVC_Homework.Models.客戶銀行資訊>

@{
    ViewBag.Title = "客戶銀行資訊";
    QueryOption queryOption = this.ViewBag.QueryOption;
}


<a href="@Url.Action("ExcelExport")">匯出報表</a>
<hr />

@using (Html.BeginForm("Index", "客戶銀行資訊", FormMethod.Get, new { @class = "form-group form-group-sm" }))
{
    @Html.Label("銀行名稱")
    @Html.TextBox("keyword", null, new { @class = "form-control", placeholder = "請輸入銀行名稱" })
    <br />
    <input type="submit" class="btn btn-primary" value="搜尋" />
}
<hr />
<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.BuildSortLink(model => model.銀行名稱, "Index", queryOption)
        </th>
        <th>
            @Html.BuildSortLink(model => model.銀行代碼, "Index", queryOption)
        </th>
        <th>
            @Html.BuildSortLink(model => model.分行代碼, "Index", queryOption)
        </th>
        <th>
            @Html.BuildSortLink(model => model.帳戶名稱, "Index", queryOption)
        </th>
        <th>
            @Html.BuildSortLink(model => model.帳戶號碼, "Index", queryOption)
        </th>
        <th>
            @Html.BuildSortLink(model => model.客戶資料.客戶名稱, "Index", queryOption)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.銀行名稱)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.銀行代碼)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.分行代碼)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.帳戶名稱)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.帳戶號碼)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.客戶資料.客戶名稱)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>
        </tr>
    }

</table>

@*@Html.BuildPager("Index", queryOption)*@
@Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", queryOption.ClonePageOption(page)), PagedListRenderOptionsBase.ClassicPlusFirstAndLast)